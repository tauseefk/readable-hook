{"version":3,"file":"index.js","sources":["../src/constants.ts","../src/utils/useThrottledCallback.tsx","../src/useReadable.tsx","../src/utils/readableTextStream.ts","../src/useStreamingQuery.tsx","../src/useStreamingMutation.tsx"],"sourcesContent":["export type PrimitiveParam = string | boolean | number;\n\nexport interface HookData<T> {\n  value: T | null;\n  isStreaming: boolean;\n}\n\nexport const DEFAULT_STREAM_DATA = {\n  value: null,\n  isStreaming: false,\n} satisfies HookData<unknown>;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\n// This utility heavily borrows from react-hookz/useThrottledCallback,\n// The goal was to ensure no dependencies.\n// https://github.com/react-hookz/web/blob/master/src/useValidator/index.ts\n\n// MIT License\n\n// Copyright (c) 2021 react-hookz\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport { DependencyList, useEffect, useMemo, useRef } from 'react';\n\nexport type ThrottledFunction<Fn extends (...args: unknown[]) => unknown> = (\n  ...args: Parameters<Fn>\n) => void;\n\nexport const useThrottledCallback = <Fn extends (...args: unknown[]) => void>(\n  cb: Fn,\n  deps: DependencyList,\n  ms = 500,\n): ThrottledFunction<Fn> => {\n  const timeout = useRef<ReturnType<typeof setTimeout>>(null);\n  const cachedArgs = useRef<Parameters<Fn>>(null);\n\n  useEffect(() => {\n    const currentTimeout = timeout.current;\n    return () => {\n      if (currentTimeout) {\n        clearTimeout(currentTimeout);\n        timeout.current = null;\n      }\n    };\n  }, []);\n\n  return useMemo(() => {\n    const execCbAndSchedule = (args: Parameters<Fn>) => {\n      cachedArgs.current = null;\n      cb(...args);\n\n      timeout.current = setTimeout(() => {\n        timeout.current = null;\n\n        if (cachedArgs.current) {\n          execCbAndSchedule(cachedArgs.current);\n\n          cachedArgs.current = null;\n        }\n      }, ms);\n    };\n\n    const throttledCb = (...args: Parameters<Fn>) => {\n      // execute immediately\n      if (!timeout.current) {\n        execCbAndSchedule(args);\n        return;\n      }\n\n      // cache arguments to be picked up by the next scheduled execution\n      cachedArgs.current = args;\n    };\n\n    return throttledCb;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cb, ms, ...deps]);\n};\n","import { useCallback, useRef, useState } from 'react';\nimport { DEFAULT_STREAM_DATA, HookData, PrimitiveParam } from './constants';\nimport { useThrottledCallback } from './utils/useThrottledCallback';\n\n/**\n * Synchronize React state with a ReadableStream.\n * @param {ReadableStream<T>} streamProducer\n *  readable stream to synchronize with state\n * @param {number} delay\n *  time interval between each stream read call\n * @returns a tuple of data retrieved from the stream\n *  and a mutation trigger function\n */\n\n// biome-ignore lint/complexity/noUselessTypeConstraint: typescript compiler won't have me\nexport const useReadable = <T extends unknown>(\n  streamProducer: (\n    params?: Record<string, PrimitiveParam>,\n  ) => Promise<ReadableStream<T>>,\n  {\n    delay,\n    accumulate,\n    accumulator,\n  }: {\n    delay?: number;\n    accumulate?: boolean;\n    accumulator?: (acc: T | null, curr: T) => T;\n  } = {\n    delay: 500,\n    accumulate: false,\n  },\n): [\n  HookData<T>,\n  (options?: {\n    params?: Record<string, PrimitiveParam>;\n    onDone?: () => void;\n  }) => Promise<void>,\n] => {\n  const frequentlyUpdatedData = useRef<HookData<T>>(DEFAULT_STREAM_DATA);\n  const [{ value, isStreaming }, setData] = useState(\n    frequentlyUpdatedData.current,\n  );\n\n  const throttledUpdateState = useThrottledCallback(\n    () => {\n      setData({\n        ...frequentlyUpdatedData.current,\n      });\n    },\n    [],\n    delay,\n  );\n\n  const synchronize = useCallback(\n    async (options?: {\n      params?: Record<string, PrimitiveParam>;\n      onDone?: () => void;\n    }) => {\n      // flush state\n      frequentlyUpdatedData.current = DEFAULT_STREAM_DATA;\n\n      const response = await streamProducer(options?.params);\n      if (!response) throw new Error('No response from stream.');\n\n      const reader = response.getReader();\n\n      // eslint-disable-next-line no-constant-condition\n      while (true) {\n        const { value, done } = await reader.read();\n\n        if (done) break;\n\n        frequentlyUpdatedData.current = {\n          isStreaming: true,\n          value:\n            accumulate && accumulator\n              ? accumulator(frequentlyUpdatedData.current.value, value)\n              : value,\n        };\n\n        throttledUpdateState();\n      }\n\n      frequentlyUpdatedData.current = {\n        ...frequentlyUpdatedData.current,\n        isStreaming: false,\n      };\n\n      throttledUpdateState();\n      options?.onDone?.();\n    },\n    [accumulate, accumulator, streamProducer, throttledUpdateState],\n  );\n\n  return [{ value, isStreaming }, synchronize];\n};\n","export const readableTextStream = async (\n  path: string,\n  options?: {\n    method: 'GET' | 'POST';\n    mode?: 'cors' | 'no-cors' | 'same-origin';\n    body?: string;\n    headers?: Record<string, string>;\n  },\n) => {\n  const response = await fetch(path, options);\n  if (!response.body) throw new Error('No response body found.');\n\n  return response.body.pipeThrough(new TextDecoderStream());\n};\n","import { PrimitiveParam } from './constants';\nimport { useReadable } from './useReadable';\nimport { readableTextStream } from './utils/readableTextStream';\n\nexport const useStreamingQuery = (\n  path: string,\n  delay = 500,\n): [\n  { value: string | null; isStreaming: boolean },\n  (options?: {\n    params?: Record<string, PrimitiveParam>;\n    onDone?: (value?: string) => void;\n  }) => Promise<void>,\n] =>\n  useReadable(\n    () =>\n      readableTextStream(path, {\n        method: 'GET',\n      }),\n    { delay },\n  );\n","import { PrimitiveParam } from './constants';\nimport { useReadable } from './useReadable';\nimport { readableTextStream } from './utils/readableTextStream';\n\nexport const useStreamingMutation = (\n  path: string,\n  staticParams?: Record<string, PrimitiveParam>,\n  options?: {\n    accumulate?: boolean;\n    delay?: number;\n  },\n): [\n  { value: string | null; isStreaming: boolean },\n  (options?: {\n    params?: Record<string, PrimitiveParam>;\n    onDone?: (value?: string) => void;\n  }) => Promise<void>,\n] =>\n  useReadable(\n    (params?: Record<string, PrimitiveParam>) =>\n      readableTextStream(path, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          ...staticParams,\n          ...params,\n        }),\n      }),\n    options,\n  );\n"],"names":["useRef","useEffect","useMemo","useState","useCallback"],"mappings":"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"}